
header {
    text-align: center;
    background-color: white;
    position: fixed;
    width: 100%;
    top: 0;
    
}

main {
    margin-top: 12rem;
}

.item {
   
    flex-grow: 2;
}

.background {
    height: 10rem;
    width: 10rem;
    background-image: url(images/tree.jpg);
    background-position: center;
    background-size: cover;
    background-repeat: no-repeat;
    display: inline-block;
}

#list-item{
    color: blue;
}

img[alt="Image 2"] {
    border: 2px solid blue;
    padding: 10px;
}

div > span:nth-child(even) {
    background-color: hotpink;
}
.container {
    display: flex;
    flex-flow: row wrap;
   justify-content: center;
}       

.wrapper {
    height: 30rem;
    width: 30rem;
    display: grid;
    grid-template-columns: 1fr 1fr 1fr;
    grid-template-rows: 1fr 1fr 1fr 1fr;
    grid-gap: 5px;
    border: 1px solid black;
}

.mediaquery {
    background-color: blue;
    width: 5rem;
    height: 5rem;
}

@media screen and (min-width: 768px) {
    .mediaquery {
        background-color: red;
        width: 7rem;
    height: 7rem;
    }
}

@media screen and (min-width: 1024px) {
    .mediaquery {
        background-color: yellow;
        width: 10rem;
    height: 10rem;
    }
}

@media screen and (min-width: 1440px) {
    .mediaquery {
        background-color: purple;
        width: 12rem;
    height: 12rem;
    }
}

.box {
    height: 20rem;
    width: 20rem;
}


.relative, .absolute, .fixed {
    border: 1px solid blue;
}

.relative {
    height: 10rem;
    width: 10rem;
    position: relative;
    left: 10rem;
}

.absolute {
    height: 5rem;
    width: 5rem;
    position: absolute;
    right: 5rem;
    top: 5rem;
    
}

.cell {
    border: 1px solid red;
}

.two {
    grid-row: 2/4; 

}

.three {
    grid-row: 1/3;
    grid-column: 2/4;
}

.seven {
    grid-column: 2/4;
}

footer a:visited {
    color: purple;
}

footer a:hover {
    color: green;
}


.heading {
    color: orange;
    font-size: 3rem;
    font-family: Arial, Helvetica, sans-serif;
}

ol li {
    text-decoration: line-through;
}
